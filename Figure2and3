library(tidyverse)
library(gt)
install.packages("patchwork")
library(patchwork)

#first, we pull in the data.
data <- read.csv("updatedigedatabase.csv", header = TRUE)
names <- read.csv("allergennames.csv", header = TRUE)

#logistic regression results first, then linear regression results.
p_mid <-
  fplottable %>%
  ggplot(aes(y = fct_rev(Allergen))) +
  theme_classic() +
  geom_point(aes(x=mean), shape=15, size=3) +
  geom_linerange(aes(xmin=lower, xmax=upper)) +
  labs(x="Log Hazard Ratio") +
  coord_cartesian(ylim=c(1,26))+
  geom_vline(xintercept = 0, linetype="dashed") +
  annotate("text", x = -.015, y = 26, label = "Negative Association") +
  annotate("text", x = .015, y = 26, label = "Positive Association") +
  theme(axis.line.y = element_blank(),
        axis.ticks.y= element_blank(),
        axis.text.y= element_blank(),
        axis.title.y= element_blank())

# wrangle results into pre-plotting table form
res_plot <- fplottable %>%
  # round estimates and 95% CIs to 2 decimal places for journal specifications
  mutate(across(
    c(mean, lower, upper),
    ~ str_pad(
      round(.x, 2),
      width = 4,
      pad = "0",
      side = "right"
    )
  ),
  estimate_lab = paste0(mean, " (", lower, "-", upper, ")")) %>%
  mutate(pvalue = case_when(
    pvalue < .001 ~ "<0.001",
    round(pvalue, 2) == .05 ~ as.character(round(pvalue,3)),
    pvalue < .01 ~ str_pad( 
      as.character(round(pvalue, 3)),
      width = 4,
      pad = "0",
      side = "right"
    ),
    TRUE ~ str_pad( 
      as.character(round(pvalue, 2)),
      width = 4,
      pad = "0",
      side = "right"
    )
  )) %>%
  bind_rows(
    data.frame(
      Allergen = "Model",
      estimate_lab = "Hazard Ratio (95% CI)",
      lower = "",
      upper = "",
      pvalue = "p-value"
    )
  ) %>%
  mutate(model = fct_rev(fct_relevel(Allergen, "Model")))

p_left <-
  res_plot %>%
  ggplot(aes(y = model)) + 
  geom_text(aes(x=0, label=model), hjust=0, fontface = "bold") +
  theme_void() +
  coord_cartesian(xlim=c(0,4))


p_right <-
  res_plot  %>%
  ggplot() +
  geom_text(aes(x=0, y=model, label=pvalue), hjust=0, fontface = ifelse(res_plot$pvalue == "p-value", "bold", "plain")) +
  theme_void() 

layout <- c(
  area(t = 0, l = -5, b = 30, r = 8),
  area(t = 1, l = 4, b = 30, r = 9),
  area(t = 0, l = 9, b = 30, r = 11)
)

# final plot arrangement
p_left + p_mid + p_right + plot_layout(design = layout)

results <- data.frame(
  Response = character(0),
  R_squared = numeric(0),
  p_value = numeric(0),
  CI_lower = numeric(0),
  CI_upper = numeric(0),
  stringsAsFactors = FALSE
)

for (i in 1:25) {
  response_var <- paste0("y_", i)
  formula <- as.formula(paste(response_var, "~ BMI"))
  model <- lm(formula, data = data)
  
  # Extract R-squared
  r_squared <- summary(model)$r.squared
  
  # Extract p-value for the slope
  p_value <- summary(model)$coefficients[2, 4]

  # Extract the slope itself
  Slope <- summary(model)$coefficients[2, 1]
  
  # Extract 95% confidence interval for the slope
  conf_int <- confint(model, level = 0.95)[2, ]
  
  # Store the results
  results <- rbind(results, data.frame(
    Response = response_var,
    R_squared = r_squared,
    p_value = p_value,
    Slope = Slope,
    CI_lower = conf_int[1],
    CI_upper = conf_int[2]
  ))
}



p_mid <-
  results |>
  ggplot(aes(y = fct_rev(Allergen))) +
  theme_classic() +
  geom_point(aes(x=mean), shape=15, size=3) +
  geom_linerange(aes(xmin=lower, xmax=upper)) +
  labs(x="Log Hazard Ratio") +
  coord_cartesian(ylim=c(1,26))+
  geom_vline(xintercept = 0, linetype="dashed") +
  annotate("text", x = -.008, y = 26, label = "Negative Association") +
  annotate("text", x = .008, y = 26, label = "Positive Association") +
  theme(axis.line.y = element_blank(),
        axis.ticks.y= element_blank(),
        axis.text.y= element_blank(),
        axis.title.y= element_blank())

# wrangle results into pre-plotting table form
res_plot <- results |>
  # round estimates and 95% CIs to 2 decimal places for journal specifications
  mutate(across(
    c(mean, lower, upper),
    ~ str_pad(
      round(.x, 2),
      width = 4,
      pad = "0",
      side = "right"
    )
  ),
  # add an "-" between HR estimate confidence intervals
  estimate_lab = paste0(mean, " (", lower, "-", upper, ")")) |>
  mutate(rsq = case_when(
    rsq < .001 ~ "<0.001",
    round(rsq, 2) == .05 ~ as.character(round(rsq,3)),
    rsq < .01 ~ str_pad( # if less than .01, go one more decimal place
      as.character(round(rsq, 3)),
      width = 4,
      pad = "0",
      side = "right"
    ),
    TRUE ~ str_pad( # otherwise just round to 2 decimal places and pad string so that .2 reads as 0.20
      as.character(round(rsq, 2)),
      width = 4,
      pad = "0",
      side = "right"
    )
  )) |>
  # round p-values to two decimal places, except in cases where p < .001
  mutate(pvalue = case_when(
    pvalue < .001 ~ "<0.001",
    round(pvalue, 2) == .05 ~ as.character(round(pvalue,3)),
    pvalue < .01 ~ str_pad( # if less than .01, go one more decimal place
      as.character(round(pvalue, 3)),
      width = 4,
      pad = "0",
      side = "right"
    ),
    TRUE ~ str_pad( # otherwise just round to 2 decimal places and pad string so that .2 reads as 0.20
      as.character(round(pvalue, 2)),
      width = 4,
      pad = "0",
      side = "right"
    )
  )) |>
  # add a row of data that are actually column names which will be shown on the plot in the next step
  bind_rows(
    data.frame(
      Allergen = "Model",
      estimate_lab = "Hazard Ratio (95% CI)",
      lower = "",
      upper = "",
      pvalue = "p-value",
      rsq = "R Squared"
    )
  ) |>
  mutate(model = fct_rev(fct_relevel(Allergen, "Model")))

p_left <-
  res_plot  |>
  ggplot(aes(y = model)) + 
  geom_text(aes(x=0, label=model), hjust=0, fontface = "bold") +
  geom_text(aes(x=1, label=rsq), hjust=0, fontface = ifelse(res_plot$estimate_lab == "Hazard Ratio (95% CI)", "bold", "plain")) +
  theme_void() +
  coord_cartesian(xlim=c(0,4))


p_right <-
  res_plot  |>
  ggplot() +
  geom_text(aes(x=0, y=model, label=pvalue), hjust=0, fontface = ifelse(res_plot$pvalue == "p-value", "bold", "plain")) +
  theme_void() 

layout <- c(
  area(t = 0, l = -5, b = 30, r = 8),
  area(t = 1, l = 4, b = 30, r = 9),
  area(t = 0, l = 9, b = 30, r = 11)
)
# final plot arrangement
p_left + p_mid + p_right + plot_layout(design = layout)
